import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import r2_score
import matplotlib.pyplot as plt

# Load sample data
data = pd.DataFrame({
    'Year': [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019],
    'BirthRate': [27.5, 26.9, 26.4, 25.8, 25.4, 24.9, 24.5, 24.1, 23.7, 23.3],
    'DeathRate': [7.3, 7.2, 7.1, 6.9, 6.8, 6.7, 6.5, 6.3, 6.1, 5.9],
    'LiteracyRate': [74, 75, 78, 80, 82, 84, 86, 87, 88, 89],
    'Population': [1210, 1240, 1270, 1300, 1332, 1365, 1398, 1431, 1465, 1500]    
})

# Extract features and target
X = data[['Year', 'BirthRate', 'DeathRate', 'LiteracyRate']]
y = data['Population']

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) 

# Train model
model = DecisionTreeRegressor()
model.fit(X_train, y_train)

# Evaluate on test data
y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
print('R-squared:', r2)

# Plot results
plt.scatter(y_test, y_pred, alpha=0.5)
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--')
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Indian Population Growth Prediction')
plt.show()
